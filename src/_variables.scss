// MIT License
//
// Copyright (c) 2017-2018 Stefano Cappa
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

$icon-font-path: "../node_modules/bootstrap-sass/assets/fonts/bootstrap/";

// Roboto fonts from assets folder
@font-face {
  font-family: Roboto-Bold;
  src: url("/assets/fonts/Roboto-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: Roboto-Italic;
  src: url("/assets/fonts/Roboto-Italic.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: Roboto-Light;
  src: url("/assets/fonts/Roboto-Light.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: Roboto-Regular;
  src: url("/assets/fonts/Roboto-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: Roboto-Thin;
  src: url("/assets/fonts/Roboto-Thin.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
$roboto-bold: "Roboto-Bold", serif;
$roboto-italic: "Roboto-Italic", serif;
$roboto-light: "Roboto-Light", serif;
$roboto-regular: "Roboto-Regular", serif;
$roboto-thin: "Roboto-Thin", serif;

// Start with assigning color names to specific hex values.
$white:  #fff !default;
$black:  #000 !default;
$red: #d91c18 !default;
$orange: #f0ab11 !default;
$yellow: #ffd500 !default;
$green: #00b811 !default;
$blue: #0c06d8 !default;
$teal: #669fde !default;
$pink: #ffa7b7 !default;
$purple: #5c1d7c !default;

// Create grayscale
$gray-dark:                 #292b2c !default;
$gray:                      #464a4c !default;
$gray-light:                #636c72 !default;
$gray-lighter:              #eceeef !default;
$gray-lightest:             #f7f7f9 !default;

// Reassign color vars to semantic color scheme
$brand-primary:             $blue !default;
$brand-success:             $green !default;
$brand-info:                $teal !default;
$brand-warning:             $orange !default;
$brand-danger:              $red !default;
$brand-inverse:             $gray-dark !default;
